import streamlit as st
import pandas as pd
import os
import requests
from PIL import Image

# Telegram token and ID
TELEGRAM_BOT_TOKEN = "7886819703:AAGYLfxKsaY9TVYg9kwUyj2qAB-JBiIVcTE"
TELEGRAM_CHAT_ID = "7897964568"

# LINE Notify Token 
LINE_NOTIFY_TOKEN = "cFNP09HM6p72xrzSbqeiTrXHN81WYfbL1d8Spjp3Izi"

# Function to send telegram massage and photo
def send_telegram_message(message):
    telegram_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    telegram_payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    
    response = requests.post(telegram_url, json=telegram_payload)
    print(response.json())  # Debugging output

def send_telegram_photo(message, image_path):
    telegram_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    telegram_payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    
    # Send text first
    requests.post(telegram_url, json=telegram_payload)

    # Send image
    if image_path:
        telegram_photo_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendPhoto"
        with open(image_path, "rb") as photo:
            files = {"photo": photo}
            requests.post(telegram_photo_url, data={"chat_id": TELEGRAM_CHAT_ID}, files=files)

# Function to send LINE notification
def send_line_notification(message, image_path=None):
    url = "https://notify-api.line.me/api/notify"
    headers = {"Authorization": f"Bearer {LINE_NOTIFY_TOKEN}"}
    data = {"message": message}
    files = {"imageFile": open(image_path, "rb")} if image_path else None
    requests.post(url, headers=headers, data=data, files=files)
# LOGO
logo_url = "https://raw.githubusercontent.com/Purseasama/Testcakeapp/main/sugarshadelogo.jpeg"

# Display the logo at the top
st.markdown(
    f"""
    <div style="text-align: center;">
        <img src="{logo_url}" width="200">
    </div>
    """,
    unsafe_allow_html=True,
)

# Modernized UI with Styled Sections
st.markdown("""
<style>
    .box {
        border: 1px solid #ddd;
        padding: 12px;
        border-radius: 10px;
        background-color: #ffffff;
        box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 15px;
    }
    .title {
        font-size: 20px;
        font-weight: bold;
        color: Black;
    }
</style>
""", unsafe_allow_html=True)

# Customer Information Section
st.markdown("<div class='box'><span class='title'>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</span></div>", unsafe_allow_html=True)
customer_name = st.text_input("üíå ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠ Line")
phone_number = st.text_input("üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå", max_chars=15, placeholder=" XXX-XXX-XXXX")
order_channel = st.radio("üì≤ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏±‡πà‡∏á", ["Line", "Facebook", "Instagram"], horizontal=True)

# Cake Type Selection
st.markdown("<div class='box'><span class='title'>üéÇ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Ñ‡πâ‡∏Å</span></div>", unsafe_allow_html=True)
cake_type = st.radio("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Ñ‡πâ‡∏Å", ["‡πÄ‡∏Ñ‡πâ‡∏Å‡∏õ‡∏≠‡∏ô‡∏î‡πå üéÇ", "‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô üç∞"], horizontal=True)

if cake_type == "‡πÄ‡∏Ñ‡πâ‡∏Å‡∏õ‡∏≠‡∏ô‡∏î‡πå üéÇ":
    st.markdown("<div class='box'><span class='title'>üéÇ ‡πÄ‡∏Ñ‡πâ‡∏Å‡∏õ‡∏≠‡∏ô‡∏î‡πå</span></div>", unsafe_allow_html=True)
    cake_base = st.selectbox("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å:", ["‡∏ß‡∏≤‡∏ô‡∏¥‡∏•‡∏•‡∏≤", "‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï"])
    cake_filling = st.selectbox("‡πÑ‡∏™‡πâ:", ["üçì ‡∏™‡∏ï‡∏£‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", "üç´ ‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", "ü´ê ‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", "üçØ ‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•"])
    cake_size = st.selectbox("‡∏Ç‡∏ô‡∏≤‡∏î:", ["0.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå", "1 ‡∏õ‡∏≠‡∏ô‡∏î‡πå", "1.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå"])
    
    cake_color_options = ["‡∏ä‡∏°‡∏û‡∏π", "‡∏ü‡πâ‡∏≤", "‡∏Ç‡∏≤‡∏ß", "‡∏î‡∏≥", "‡∏°‡πà‡∏ß‡∏á", "‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏"]
    cake_color_choice = st.selectbox("‡∏™‡∏µ‡πÄ‡∏Ñ‡πâ‡∏Å:", cake_color_options)
    if cake_color_choice == "‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏":
        custom_cake_color = st.text_input("‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
        cake_color = custom_cake_color if custom_cake_color else "Not Specified"
    else:
        cake_color = cake_color_choice
        
    cake_text = st.text_input("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ô‡πÄ‡∏Ñ‡πâ‡∏Å/‡∏ê‡∏≤‡∏ô", placeholder="‡πÄ‡∏ä‡πà‡∏ô Happy birthday!")
    cake_specification = st.text_input("‡∏ö‡∏£‡∏µ‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏´‡∏≤‡∏Å‡∏°‡∏µ)", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡πÇ‡∏ö‡∏ß‡πå‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏î‡∏≥")

    # Upload Cake Reference Image
    uploaded_file = st.file_uploader("üì∑ ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)", type=["jpg", "png", "jpeg"])

    # Save uploaded file
    image_path = None
    if uploaded_file is not None:
        image_path = os.path.join("uploaded_images", uploaded_file.name)
        os.makedirs("uploaded_images", exist_ok=True)
        with open(image_path, "wb") as f:
            f.write(uploaded_file.getbuffer())
        st.image(image_path, caption="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å", use_container_width=True)

    # Selecting candle
    st.markdown("<div class='box'><span class='title'>üïØÔ∏è‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô </span></div>", unsafe_allow_html=True)
    candle_type = st.radio("‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (‡πÅ‡∏ó‡πà‡∏á‡∏•‡∏∞ 10 ‡∏ö‡∏≤‡∏ó):", ["‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß", "‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏™‡∏±‡πâ‡∏ô‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π", "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô"])

    num_candles = st.slider("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÅ‡∏ó‡πà‡∏á):", min_value=1, max_value=10, value=1) if candle_type != "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô" else 0

    # Delivery details
    st.markdown("<div class='box'><span class='title'>üöó ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á </span></div>", unsafe_allow_html=True)
    delivery_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å")
    delivery_time = st.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å")
    delivery_option = st.radio("‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πà‡∏á:", ["‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á", "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå", "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"])
    
    if delivery_option == "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå":
        st.warning(
            "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡πâ‡∏Å‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞\n"
            "‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å lalamove / bolt / grab \n"
            
            "‚ùå ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå\n"
            "1. ‡πÄ‡∏Ñ‡πâ‡∏Å 1.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ\n"
            "2. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏Å‡∏°.\n"
            "3. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô 3D ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á\n"
            "4. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡πÑ‡∏°‡πâ\n"
            "‚õîÔ∏è ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞üôèüèª"
        )
    delivery_location = st.text_input("‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á (‡∏´‡∏≤‡∏Å‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á)", placeholder="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πá‡∏ô Google Link ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ")
    
    # Order Confirmation Buttons
    if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"):
        order_summary = f"""
üíå K.{customer_name}
- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {phone_number}
- ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏±‡πà‡∏á : {order_channel}

üéÇ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Ñ‡πâ‡∏Å
- ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å: {cake_base}
- ‡πÑ‡∏™‡πâ: {cake_filling}
- ‡∏Ç‡∏ô‡∏≤‡∏î: {cake_size}
- ‡∏™‡∏µ‡πÄ‡∏Ñ‡πâ‡∏Å: {cake_color}
- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {cake_text}
- ‡∏ö‡∏£‡∏µ‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡πÜ: {cake_specification}

üïØÔ∏è ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 
- ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô : {candle_type} {num_candles} ‡πÅ‡∏ó‡πà‡∏á

üöó ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
- ‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å: {delivery_date}
- ‡πÄ‡∏ß‡∏•‡∏≤: {delivery_time}
- ‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: {delivery_option}
- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö: {delivery_location}
        """
        st.success(order_summary)
        if image_path:
            st.image(image_path, caption="üì∑ ‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î", use_container_width=True)
        
        # Send text + image to Line notify
        send_line_notification(order_summary, image_path)

        # Send text + image to Telegram
        send_telegram_photo(order_summary, image_path)


elif cake_type == "‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô üç∞":
    st.markdown("<div class='box'><span class='title'>üç∞ ‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô</span></div>", unsafe_allow_html=True)
    num_pieces = st.selectbox("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô:", list(range(1, 101)))
    
    cake_flavors = []
    for i in range(num_pieces):
        flavor = st.selectbox(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏™‡πâ‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏µ‡πà {i+1}", ["‡∏™‡∏ï‡∏£‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", "‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", "‡∏™‡πâ‡∏°", "‡πÄ‡∏•‡∏°‡∏≠‡∏ô", "‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á", "‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß", "‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", "‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•", "‡∏ö‡∏≤‡∏ô‡∏≠‡∏ü‡∏ü‡∏µ‡πà"])
        cake_flavors.append(f"{i+1}. {flavor}")
    # Packing choice for 4 or 6 pieces
    packing_option = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏û‡πá‡∏Ñ:", ["‡πÅ‡∏¢‡∏Å‡∏ä‡∏¥‡πâ‡∏ô", "‡∏£‡∏ß‡∏°‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô"]) if num_pieces in [4, 6] else "‡πÅ‡∏¢‡∏Å‡∏ä‡∏¥‡πâ‡∏ô"

    # Selecting candle
    st.markdown("<div class='box'><span class='title'>üïØÔ∏è‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô </span></div>", unsafe_allow_html=True)
    candle_type = st.radio("‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (‡πÅ‡∏ó‡πà‡∏á‡∏•‡∏∞ 10 ‡∏ö‡∏≤‡∏ó):", ["‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß", "‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏™‡∏±‡πâ‡∏ô‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π", "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô"])

    num_candles = st.slider("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÅ‡∏ó‡πà‡∏á):", min_value=1, max_value=10, value=1) if candle_type != "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô" else 0
    
    # Delivery details
    st.markdown("<div class='box'><span class='title'>üöó ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á </span></div>", unsafe_allow_html=True)
    delivery_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å")
    delivery_time = st.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å")
    delivery_option = st.radio("‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πà‡∏á:", ["‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á", "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå", "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"])
    if delivery_option == "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå":
        st.warning(
            "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡πâ‡∏Å‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞\n"
            "‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å lalamove / bolt / grab \n"
            
            "‚ùå ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå\n"
            "1. ‡πÄ‡∏Ñ‡πâ‡∏Å 1.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ\n"
            "2. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏Å‡∏°.\n"
            "3. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô 3D ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á\n"
            "4. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡πÑ‡∏°‡πâ\n"
            "‚õîÔ∏è ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞üôèüèª"
        )
    delivery_location = st.text_input("‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á (‡∏´‡∏≤‡∏Å‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á)", placeholder="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πá‡∏ô Google Link ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ")
    
    # Order Confirmation Button
    if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"):
        order_summary = f"""
üíå K.{customer_name}
- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {phone_number}
- ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏±‡πà‡∏á : {order_channel}

üç∞ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô
- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {num_pieces} ‡∏ä‡∏¥‡πâ‡∏ô
- ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥:\n{chr(10).join(cake_flavors)}
- ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏û‡πá‡∏Ñ: {packing_option}

üïØÔ∏è ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 
- ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô : {candle_type} {num_candles} ‡πÅ‡∏ó‡πà‡∏á

üöó ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
- ‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å: {delivery_date}
- ‡πÄ‡∏ß‡∏•‡∏≤: {delivery_time}
- ‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: {delivery_option}
- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö: {delivery_location}
        """
        st.success(order_summary)
        send_line_notification(order_summary)
        send_line_oa_message(order_summary,image_url)